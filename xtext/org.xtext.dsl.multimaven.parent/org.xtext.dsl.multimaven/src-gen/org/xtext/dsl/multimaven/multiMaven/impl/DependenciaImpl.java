/**
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.multimaven.multiMaven.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.dsl.multimaven.multiMaven.Dependencia;
import org.xtext.dsl.multimaven.multiMaven.MultiMavenPackage;
import org.xtext.dsl.multimaven.multiMaven.Scope;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dependencia</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.dsl.multimaven.multiMaven.impl.DependenciaImpl#getGroup <em>Group</em>}</li>
 *   <li>{@link org.xtext.dsl.multimaven.multiMaven.impl.DependenciaImpl#getArtifcat <em>Artifcat</em>}</li>
 *   <li>{@link org.xtext.dsl.multimaven.multiMaven.impl.DependenciaImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link org.xtext.dsl.multimaven.multiMaven.impl.DependenciaImpl#getScope <em>Scope</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DependenciaImpl extends MinimalEObjectImpl.Container implements Dependencia
{
  /**
   * The default value of the '{@link #getGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroup()
   * @generated
   * @ordered
   */
  protected static final String GROUP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGroup() <em>Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroup()
   * @generated
   * @ordered
   */
  protected String group = GROUP_EDEFAULT;

  /**
   * The default value of the '{@link #getArtifcat() <em>Artifcat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArtifcat()
   * @generated
   * @ordered
   */
  protected static final String ARTIFCAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArtifcat() <em>Artifcat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArtifcat()
   * @generated
   * @ordered
   */
  protected String artifcat = ARTIFCAT_EDEFAULT;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected static final Scope SCOPE_EDEFAULT = Scope.COMPILE;

  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected Scope scope = SCOPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DependenciaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MultiMavenPackage.Literals.DEPENDENCIA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGroup()
  {
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGroup(String newGroup)
  {
    String oldGroup = group;
    group = newGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MultiMavenPackage.DEPENDENCIA__GROUP, oldGroup, group));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArtifcat()
  {
    return artifcat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArtifcat(String newArtifcat)
  {
    String oldArtifcat = artifcat;
    artifcat = newArtifcat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MultiMavenPackage.DEPENDENCIA__ARTIFCAT, oldArtifcat, artifcat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MultiMavenPackage.DEPENDENCIA__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Scope getScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScope(Scope newScope)
  {
    Scope oldScope = scope;
    scope = newScope == null ? SCOPE_EDEFAULT : newScope;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MultiMavenPackage.DEPENDENCIA__SCOPE, oldScope, scope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MultiMavenPackage.DEPENDENCIA__GROUP:
        return getGroup();
      case MultiMavenPackage.DEPENDENCIA__ARTIFCAT:
        return getArtifcat();
      case MultiMavenPackage.DEPENDENCIA__VERSION:
        return getVersion();
      case MultiMavenPackage.DEPENDENCIA__SCOPE:
        return getScope();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MultiMavenPackage.DEPENDENCIA__GROUP:
        setGroup((String)newValue);
        return;
      case MultiMavenPackage.DEPENDENCIA__ARTIFCAT:
        setArtifcat((String)newValue);
        return;
      case MultiMavenPackage.DEPENDENCIA__VERSION:
        setVersion((String)newValue);
        return;
      case MultiMavenPackage.DEPENDENCIA__SCOPE:
        setScope((Scope)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MultiMavenPackage.DEPENDENCIA__GROUP:
        setGroup(GROUP_EDEFAULT);
        return;
      case MultiMavenPackage.DEPENDENCIA__ARTIFCAT:
        setArtifcat(ARTIFCAT_EDEFAULT);
        return;
      case MultiMavenPackage.DEPENDENCIA__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case MultiMavenPackage.DEPENDENCIA__SCOPE:
        setScope(SCOPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MultiMavenPackage.DEPENDENCIA__GROUP:
        return GROUP_EDEFAULT == null ? group != null : !GROUP_EDEFAULT.equals(group);
      case MultiMavenPackage.DEPENDENCIA__ARTIFCAT:
        return ARTIFCAT_EDEFAULT == null ? artifcat != null : !ARTIFCAT_EDEFAULT.equals(artifcat);
      case MultiMavenPackage.DEPENDENCIA__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case MultiMavenPackage.DEPENDENCIA__SCOPE:
        return scope != SCOPE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (group: ");
    result.append(group);
    result.append(", artifcat: ");
    result.append(artifcat);
    result.append(", version: ");
    result.append(version);
    result.append(", scope: ");
    result.append(scope);
    result.append(')');
    return result.toString();
  }

} //DependenciaImpl
