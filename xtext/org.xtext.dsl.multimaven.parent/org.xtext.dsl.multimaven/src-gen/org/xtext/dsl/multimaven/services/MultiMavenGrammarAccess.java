/*
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.multimaven.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MultiMavenGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProyectoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Proyecto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProyectoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cXlmnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionVERSIONTerminalRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Assignment cPadreAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPadreDirectorioPadreParserRuleCall_3_0 = (RuleCall)cPadreAssignment_3.eContents().get(0);
		
		//Proyecto:
		//	'Proyecto' 'Xlmn:' version=VERSION
		//	padre=DirectorioPadre;
		@Override public ParserRule getRule() { return rule; }
		
		//'Proyecto' 'Xlmn:' version=VERSION padre=DirectorioPadre
		public Group getGroup() { return cGroup; }
		
		//'Proyecto'
		public Keyword getProyectoKeyword_0() { return cProyectoKeyword_0; }
		
		//'Xlmn:'
		public Keyword getXlmnKeyword_1() { return cXlmnKeyword_1; }
		
		//version=VERSION
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_2_0() { return cVersionVERSIONTerminalRuleCall_2_0; }
		
		//padre=DirectorioPadre
		public Assignment getPadreAssignment_3() { return cPadreAssignment_3; }
		
		//DirectorioPadre
		public RuleCall getPadreDirectorioPadreParserRuleCall_3_0() { return cPadreDirectorioPadreParserRuleCall_3_0; }
	}
	public class DirectorioPadreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.DirectorioPadre");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRootKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPathKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathPATHTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cGroupKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cGroupAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cGroupGROUPTerminalRuleCall_5_0 = (RuleCall)cGroupAssignment_5.eContents().get(0);
		private final Keyword cArtifactKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cArtifactAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cArtifactARTIFACTTerminalRuleCall_7_0 = (RuleCall)cArtifactAssignment_7.eContents().get(0);
		private final Keyword cVersionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cVersionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cVersionVERSIONTerminalRuleCall_9_0 = (RuleCall)cVersionAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPackagingKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cPackagingAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPackagingPackagingEnumRuleCall_10_1_0 = (RuleCall)cPackagingAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDependenciasKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cDependenciasAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cDependenciasDependenciaParserRuleCall_11_2_0 = (RuleCall)cDependenciasAssignment_11_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cPluginsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cPluginsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cPluginsPluginParserRuleCall_12_2_0 = (RuleCall)cPluginsAssignment_12_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Keyword cHijosKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftSquareBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cDirectoriosAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cDirectoriosDirectorioParserRuleCall_15_0 = (RuleCall)cDirectoriosAssignment_15.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//DirectorioPadre:
		//	'Root' '{'
		//	'Path' path=PATH
		//	'Group' group=GROUP
		//	'Artifact' artifact=ARTIFACT
		//	'Version' version=VERSION ('Packaging' packaging=Packaging)? ('Dependencias' '['
		//	dependencias+=Dependencia*
		//	']')? ('Plugins' '['
		//	plugins+=Plugin*
		//	']')?
		//	'Hijos' '['
		//	directorios+=Directorio*
		//	']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Root' '{' 'Path' path=PATH 'Group' group=GROUP 'Artifact' artifact=ARTIFACT 'Version' version=VERSION ('Packaging'
		//packaging=Packaging)? ('Dependencias' '[' dependencias+=Dependencia* ']')? ('Plugins' '[' plugins+=Plugin* ']')?
		//'Hijos' '[' directorios+=Directorio* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'Root'
		public Keyword getRootKeyword_0() { return cRootKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Path'
		public Keyword getPathKeyword_2() { return cPathKeyword_2; }
		
		//path=PATH
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }
		
		//PATH
		public RuleCall getPathPATHTerminalRuleCall_3_0() { return cPathPATHTerminalRuleCall_3_0; }
		
		//'Group'
		public Keyword getGroupKeyword_4() { return cGroupKeyword_4; }
		
		//group=GROUP
		public Assignment getGroupAssignment_5() { return cGroupAssignment_5; }
		
		//GROUP
		public RuleCall getGroupGROUPTerminalRuleCall_5_0() { return cGroupGROUPTerminalRuleCall_5_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_6() { return cArtifactKeyword_6; }
		
		//artifact=ARTIFACT
		public Assignment getArtifactAssignment_7() { return cArtifactAssignment_7; }
		
		//ARTIFACT
		public RuleCall getArtifactARTIFACTTerminalRuleCall_7_0() { return cArtifactARTIFACTTerminalRuleCall_7_0; }
		
		//'Version'
		public Keyword getVersionKeyword_8() { return cVersionKeyword_8; }
		
		//version=VERSION
		public Assignment getVersionAssignment_9() { return cVersionAssignment_9; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_9_0() { return cVersionVERSIONTerminalRuleCall_9_0; }
		
		//('Packaging' packaging=Packaging)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Packaging'
		public Keyword getPackagingKeyword_10_0() { return cPackagingKeyword_10_0; }
		
		//packaging=Packaging
		public Assignment getPackagingAssignment_10_1() { return cPackagingAssignment_10_1; }
		
		//Packaging
		public RuleCall getPackagingPackagingEnumRuleCall_10_1_0() { return cPackagingPackagingEnumRuleCall_10_1_0; }
		
		//('Dependencias' '[' dependencias+=Dependencia* ']')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'Dependencias'
		public Keyword getDependenciasKeyword_11_0() { return cDependenciasKeyword_11_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_11_1() { return cLeftSquareBracketKeyword_11_1; }
		
		//dependencias+=Dependencia*
		public Assignment getDependenciasAssignment_11_2() { return cDependenciasAssignment_11_2; }
		
		//Dependencia
		public RuleCall getDependenciasDependenciaParserRuleCall_11_2_0() { return cDependenciasDependenciaParserRuleCall_11_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_11_3() { return cRightSquareBracketKeyword_11_3; }
		
		//('Plugins' '[' plugins+=Plugin* ']')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'Plugins'
		public Keyword getPluginsKeyword_12_0() { return cPluginsKeyword_12_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_12_1() { return cLeftSquareBracketKeyword_12_1; }
		
		//plugins+=Plugin*
		public Assignment getPluginsAssignment_12_2() { return cPluginsAssignment_12_2; }
		
		//Plugin
		public RuleCall getPluginsPluginParserRuleCall_12_2_0() { return cPluginsPluginParserRuleCall_12_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12_3() { return cRightSquareBracketKeyword_12_3; }
		
		//'Hijos'
		public Keyword getHijosKeyword_13() { return cHijosKeyword_13; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_14() { return cLeftSquareBracketKeyword_14; }
		
		//directorios+=Directorio*
		public Assignment getDirectoriosAssignment_15() { return cDirectoriosAssignment_15; }
		
		//Directorio
		public RuleCall getDirectoriosDirectorioParserRuleCall_15_0() { return cDirectoriosDirectorioParserRuleCall_15_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_16() { return cRightSquareBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class DirectorioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Directorio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIdDirectorioParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cGroupKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGroupAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGroupGROUPTerminalRuleCall_3_0 = (RuleCall)cGroupAssignment_3.eContents().get(0);
		private final Keyword cArtifactKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cArtifactAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cArtifactARTIFACTTerminalRuleCall_5_0 = (RuleCall)cArtifactAssignment_5.eContents().get(0);
		private final Keyword cVersionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVersionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVersionVERSIONTerminalRuleCall_7_0 = (RuleCall)cVersionAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPackagingKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPackagingAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPackagingPackagingEnumRuleCall_8_1_0 = (RuleCall)cPackagingAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDependenciasKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cDependenciasAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cDependenciasDependenciaParserRuleCall_9_2_0 = (RuleCall)cDependenciasAssignment_9_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPluginsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cPluginsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cPluginsPluginParserRuleCall_10_2_0 = (RuleCall)cPluginsAssignment_10_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Directorio:
		//	name=IdDirectorio
		//	'{'
		//	'Group' group=GROUP
		//	'Artifact' artifact=ARTIFACT
		//	'Version' version=VERSION ('Packaging' packaging=Packaging)? ('Dependencias' '['
		//	dependencias+=Dependencia*
		//	']')? ('Plugins' '['
		//	plugins+=Plugin*
		//	']')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=IdDirectorio '{' 'Group' group=GROUP 'Artifact' artifact=ARTIFACT 'Version' version=VERSION ('Packaging'
		//packaging=Packaging)? ('Dependencias' '[' dependencias+=Dependencia* ']')? ('Plugins' '[' plugins+=Plugin* ']')? '}'
		public Group getGroup() { return cGroup; }
		
		//name=IdDirectorio
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//IdDirectorio
		public RuleCall getNameIdDirectorioParserRuleCall_0_0() { return cNameIdDirectorioParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'Group'
		public Keyword getGroupKeyword_2() { return cGroupKeyword_2; }
		
		//group=GROUP
		public Assignment getGroupAssignment_3() { return cGroupAssignment_3; }
		
		//GROUP
		public RuleCall getGroupGROUPTerminalRuleCall_3_0() { return cGroupGROUPTerminalRuleCall_3_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_4() { return cArtifactKeyword_4; }
		
		//artifact=ARTIFACT
		public Assignment getArtifactAssignment_5() { return cArtifactAssignment_5; }
		
		//ARTIFACT
		public RuleCall getArtifactARTIFACTTerminalRuleCall_5_0() { return cArtifactARTIFACTTerminalRuleCall_5_0; }
		
		//'Version'
		public Keyword getVersionKeyword_6() { return cVersionKeyword_6; }
		
		//version=VERSION
		public Assignment getVersionAssignment_7() { return cVersionAssignment_7; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_7_0() { return cVersionVERSIONTerminalRuleCall_7_0; }
		
		//('Packaging' packaging=Packaging)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Packaging'
		public Keyword getPackagingKeyword_8_0() { return cPackagingKeyword_8_0; }
		
		//packaging=Packaging
		public Assignment getPackagingAssignment_8_1() { return cPackagingAssignment_8_1; }
		
		//Packaging
		public RuleCall getPackagingPackagingEnumRuleCall_8_1_0() { return cPackagingPackagingEnumRuleCall_8_1_0; }
		
		//('Dependencias' '[' dependencias+=Dependencia* ']')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'Dependencias'
		public Keyword getDependenciasKeyword_9_0() { return cDependenciasKeyword_9_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_9_1() { return cLeftSquareBracketKeyword_9_1; }
		
		//dependencias+=Dependencia*
		public Assignment getDependenciasAssignment_9_2() { return cDependenciasAssignment_9_2; }
		
		//Dependencia
		public RuleCall getDependenciasDependenciaParserRuleCall_9_2_0() { return cDependenciasDependenciaParserRuleCall_9_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9_3() { return cRightSquareBracketKeyword_9_3; }
		
		//('Plugins' '[' plugins+=Plugin* ']')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'Plugins'
		public Keyword getPluginsKeyword_10_0() { return cPluginsKeyword_10_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_10_1() { return cLeftSquareBracketKeyword_10_1; }
		
		//plugins+=Plugin*
		public Assignment getPluginsAssignment_10_2() { return cPluginsAssignment_10_2; }
		
		//Plugin
		public RuleCall getPluginsPluginParserRuleCall_10_2_0() { return cPluginsPluginParserRuleCall_10_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_10_3() { return cRightSquareBracketKeyword_10_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class DependenciaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Dependencia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGroupAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGroupGROUPTerminalRuleCall_2_0 = (RuleCall)cGroupAssignment_2.eContents().get(0);
		private final Keyword cArtifactKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cArtifactAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cArtifactARTIFACTTerminalRuleCall_4_0 = (RuleCall)cArtifactAssignment_4.eContents().get(0);
		private final Keyword cVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVersionVERSIONTerminalRuleCall_6_0 = (RuleCall)cVersionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cScopeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cScopeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cScopeScopeEnumRuleCall_7_1_0 = (RuleCall)cScopeAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Dependencia:
		//	'{'
		//	'Group' group=GROUP
		//	'Artifact' artifact=ARTIFACT
		//	'Version' version=VERSION ('Scope' scope=Scope)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'Group' group=GROUP 'Artifact' artifact=ARTIFACT 'Version' version=VERSION ('Scope' scope=Scope)? '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'Group'
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }
		
		//group=GROUP
		public Assignment getGroupAssignment_2() { return cGroupAssignment_2; }
		
		//GROUP
		public RuleCall getGroupGROUPTerminalRuleCall_2_0() { return cGroupGROUPTerminalRuleCall_2_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_3() { return cArtifactKeyword_3; }
		
		//artifact=ARTIFACT
		public Assignment getArtifactAssignment_4() { return cArtifactAssignment_4; }
		
		//ARTIFACT
		public RuleCall getArtifactARTIFACTTerminalRuleCall_4_0() { return cArtifactARTIFACTTerminalRuleCall_4_0; }
		
		//'Version'
		public Keyword getVersionKeyword_5() { return cVersionKeyword_5; }
		
		//version=VERSION
		public Assignment getVersionAssignment_6() { return cVersionAssignment_6; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_6_0() { return cVersionVERSIONTerminalRuleCall_6_0; }
		
		//('Scope' scope=Scope)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Scope'
		public Keyword getScopeKeyword_7_0() { return cScopeKeyword_7_0; }
		
		//scope=Scope
		public Assignment getScopeAssignment_7_1() { return cScopeAssignment_7_1; }
		
		//Scope
		public RuleCall getScopeScopeEnumRuleCall_7_1_0() { return cScopeScopeEnumRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class PluginElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Plugin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGroupAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGroupGROUPTerminalRuleCall_2_0 = (RuleCall)cGroupAssignment_2.eContents().get(0);
		private final Keyword cArtifactKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cArtifactAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cArtifactARTIFACTTerminalRuleCall_4_0 = (RuleCall)cArtifactAssignment_4.eContents().get(0);
		private final Keyword cVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVersionVERSIONTerminalRuleCall_6_0 = (RuleCall)cVersionAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Plugin:
		//	'{'
		//	'Group' group=GROUP
		//	'Artifact' artifact=ARTIFACT
		//	'Version' version=VERSION
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'Group' group=GROUP 'Artifact' artifact=ARTIFACT 'Version' version=VERSION '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'Group'
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }
		
		//group=GROUP
		public Assignment getGroupAssignment_2() { return cGroupAssignment_2; }
		
		//GROUP
		public RuleCall getGroupGROUPTerminalRuleCall_2_0() { return cGroupGROUPTerminalRuleCall_2_0; }
		
		//'Artifact'
		public Keyword getArtifactKeyword_3() { return cArtifactKeyword_3; }
		
		//artifact=ARTIFACT
		public Assignment getArtifactAssignment_4() { return cArtifactAssignment_4; }
		
		//ARTIFACT
		public RuleCall getArtifactARTIFACTTerminalRuleCall_4_0() { return cArtifactARTIFACTTerminalRuleCall_4_0; }
		
		//'Version'
		public Keyword getVersionKeyword_5() { return cVersionKeyword_5; }
		
		//version=VERSION
		public Assignment getVersionAssignment_6() { return cVersionAssignment_6; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_6_0() { return cVersionVERSIONTerminalRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class IdDirectorioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.IdDirectorio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHijoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//IdDirectorio:
		//	'Hijo' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'Hijo' INT
		public Group getGroup() { return cGroup; }
		
		//'Hijo'
		public Keyword getHijoKeyword_0() { return cHijoKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class PackagingElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Packaging");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPOMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPOMPOMKeyword_0_0 = (Keyword)cPOMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cJAREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cJARJARKeyword_1_0 = (Keyword)cJAREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEAREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEAREARKeyword_2_0 = (Keyword)cEAREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWAREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWARWARKeyword_3_0 = (Keyword)cWAREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRAREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRARRARKeyword_4_0 = (Keyword)cRAREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMAVENPLUGINEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMAVENPLUGINMAVENPLUGINKeyword_5_0 = (Keyword)cMAVENPLUGINEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cEJBEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cEJBEJBKeyword_6_0 = (Keyword)cEJBEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum Packaging:
		//	POM | JAR | EAR | WAR | RAR | MAVENPLUGIN | EJB;
		public EnumRule getRule() { return rule; }
		
		//POM | JAR | EAR | WAR | RAR | MAVENPLUGIN | EJB
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//POM
		public EnumLiteralDeclaration getPOMEnumLiteralDeclaration_0() { return cPOMEnumLiteralDeclaration_0; }
		
		//"POM"
		public Keyword getPOMPOMKeyword_0_0() { return cPOMPOMKeyword_0_0; }
		
		//JAR
		public EnumLiteralDeclaration getJAREnumLiteralDeclaration_1() { return cJAREnumLiteralDeclaration_1; }
		
		//"JAR"
		public Keyword getJARJARKeyword_1_0() { return cJARJARKeyword_1_0; }
		
		//EAR
		public EnumLiteralDeclaration getEAREnumLiteralDeclaration_2() { return cEAREnumLiteralDeclaration_2; }
		
		//"EAR"
		public Keyword getEAREARKeyword_2_0() { return cEAREARKeyword_2_0; }
		
		//WAR
		public EnumLiteralDeclaration getWAREnumLiteralDeclaration_3() { return cWAREnumLiteralDeclaration_3; }
		
		//"WAR"
		public Keyword getWARWARKeyword_3_0() { return cWARWARKeyword_3_0; }
		
		//RAR
		public EnumLiteralDeclaration getRAREnumLiteralDeclaration_4() { return cRAREnumLiteralDeclaration_4; }
		
		//"RAR"
		public Keyword getRARRARKeyword_4_0() { return cRARRARKeyword_4_0; }
		
		//MAVENPLUGIN
		public EnumLiteralDeclaration getMAVENPLUGINEnumLiteralDeclaration_5() { return cMAVENPLUGINEnumLiteralDeclaration_5; }
		
		//"MAVENPLUGIN"
		public Keyword getMAVENPLUGINMAVENPLUGINKeyword_5_0() { return cMAVENPLUGINMAVENPLUGINKeyword_5_0; }
		
		//EJB
		public EnumLiteralDeclaration getEJBEnumLiteralDeclaration_6() { return cEJBEnumLiteralDeclaration_6; }
		
		//"EJB"
		public Keyword getEJBEJBKeyword_6_0() { return cEJBEJBKeyword_6_0; }
	}
	public class ScopeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.Scope");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCOMPILEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCOMPILECOMPILEKeyword_0_0 = (Keyword)cCOMPILEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTESTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTESTTESTKeyword_1_0 = (Keyword)cTESTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPACKAGEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPACKAGEPACKAGEKeyword_2_0 = (Keyword)cPACKAGEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINSTALLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINSTALLINSTALLKeyword_3_0 = (Keyword)cINSTALLEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDEPLOYEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDEPLOYDEPLOYKeyword_4_0 = (Keyword)cDEPLOYEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum Scope:
		//	COMPILE | TEST | PACKAGE | INSTALL | DEPLOY;
		public EnumRule getRule() { return rule; }
		
		//COMPILE | TEST | PACKAGE | INSTALL | DEPLOY
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//COMPILE
		public EnumLiteralDeclaration getCOMPILEEnumLiteralDeclaration_0() { return cCOMPILEEnumLiteralDeclaration_0; }
		
		//"COMPILE"
		public Keyword getCOMPILECOMPILEKeyword_0_0() { return cCOMPILECOMPILEKeyword_0_0; }
		
		//TEST
		public EnumLiteralDeclaration getTESTEnumLiteralDeclaration_1() { return cTESTEnumLiteralDeclaration_1; }
		
		//"TEST"
		public Keyword getTESTTESTKeyword_1_0() { return cTESTTESTKeyword_1_0; }
		
		//PACKAGE
		public EnumLiteralDeclaration getPACKAGEEnumLiteralDeclaration_2() { return cPACKAGEEnumLiteralDeclaration_2; }
		
		//"PACKAGE"
		public Keyword getPACKAGEPACKAGEKeyword_2_0() { return cPACKAGEPACKAGEKeyword_2_0; }
		
		//INSTALL
		public EnumLiteralDeclaration getINSTALLEnumLiteralDeclaration_3() { return cINSTALLEnumLiteralDeclaration_3; }
		
		//"INSTALL"
		public Keyword getINSTALLINSTALLKeyword_3_0() { return cINSTALLINSTALLKeyword_3_0; }
		
		//DEPLOY
		public EnumLiteralDeclaration getDEPLOYEnumLiteralDeclaration_4() { return cDEPLOYEnumLiteralDeclaration_4; }
		
		//"DEPLOY"
		public Keyword getDEPLOYDEPLOYKeyword_4_0() { return cDEPLOYDEPLOYKeyword_4_0; }
	}
	
	private final ProyectoElements pProyecto;
	private final DirectorioPadreElements pDirectorioPadre;
	private final DirectorioElements pDirectorio;
	private final DependenciaElements pDependencia;
	private final PluginElements pPlugin;
	private final IdDirectorioElements pIdDirectorio;
	private final TerminalRule tPATH;
	private final TerminalRule tGROUP;
	private final TerminalRule tARTIFACT;
	private final TerminalRule tVERSION;
	private final PackagingElements ePackaging;
	private final ScopeElements eScope;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MultiMavenGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProyecto = new ProyectoElements();
		this.pDirectorioPadre = new DirectorioPadreElements();
		this.pDirectorio = new DirectorioElements();
		this.pDependencia = new DependenciaElements();
		this.pPlugin = new PluginElements();
		this.pIdDirectorio = new IdDirectorioElements();
		this.tPATH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.PATH");
		this.tGROUP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.GROUP");
		this.tARTIFACT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.ARTIFACT");
		this.tVERSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.dsl.multimaven.MultiMaven.VERSION");
		this.ePackaging = new PackagingElements();
		this.eScope = new ScopeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.dsl.multimaven.MultiMaven".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Proyecto:
	//	'Proyecto' 'Xlmn:' version=VERSION
	//	padre=DirectorioPadre;
	public ProyectoElements getProyectoAccess() {
		return pProyecto;
	}
	
	public ParserRule getProyectoRule() {
		return getProyectoAccess().getRule();
	}
	
	//DirectorioPadre:
	//	'Root' '{'
	//	'Path' path=PATH
	//	'Group' group=GROUP
	//	'Artifact' artifact=ARTIFACT
	//	'Version' version=VERSION ('Packaging' packaging=Packaging)? ('Dependencias' '['
	//	dependencias+=Dependencia*
	//	']')? ('Plugins' '['
	//	plugins+=Plugin*
	//	']')?
	//	'Hijos' '['
	//	directorios+=Directorio*
	//	']'
	//	'}';
	public DirectorioPadreElements getDirectorioPadreAccess() {
		return pDirectorioPadre;
	}
	
	public ParserRule getDirectorioPadreRule() {
		return getDirectorioPadreAccess().getRule();
	}
	
	//Directorio:
	//	name=IdDirectorio
	//	'{'
	//	'Group' group=GROUP
	//	'Artifact' artifact=ARTIFACT
	//	'Version' version=VERSION ('Packaging' packaging=Packaging)? ('Dependencias' '['
	//	dependencias+=Dependencia*
	//	']')? ('Plugins' '['
	//	plugins+=Plugin*
	//	']')?
	//	'}';
	public DirectorioElements getDirectorioAccess() {
		return pDirectorio;
	}
	
	public ParserRule getDirectorioRule() {
		return getDirectorioAccess().getRule();
	}
	
	//Dependencia:
	//	'{'
	//	'Group' group=GROUP
	//	'Artifact' artifact=ARTIFACT
	//	'Version' version=VERSION ('Scope' scope=Scope)?
	//	'}';
	public DependenciaElements getDependenciaAccess() {
		return pDependencia;
	}
	
	public ParserRule getDependenciaRule() {
		return getDependenciaAccess().getRule();
	}
	
	//Plugin:
	//	'{'
	//	'Group' group=GROUP
	//	'Artifact' artifact=ARTIFACT
	//	'Version' version=VERSION
	//	'}';
	public PluginElements getPluginAccess() {
		return pPlugin;
	}
	
	public ParserRule getPluginRule() {
		return getPluginAccess().getRule();
	}
	
	//IdDirectorio:
	//	'Hijo' INT;
	public IdDirectorioElements getIdDirectorioAccess() {
		return pIdDirectorio;
	}
	
	public ParserRule getIdDirectorioRule() {
		return getIdDirectorioAccess().getRule();
	}
	
	//terminal PATH:
	//	'a' | 'b' | '1111111111111111' | '11111111111111';
	public TerminalRule getPATHRule() {
		return tPATH;
	}
	
	//terminal GROUP:
	//	'c' | 'd';
	public TerminalRule getGROUPRule() {
		return tGROUP;
	}
	
	//terminal ARTIFACT:
	//	'e' | 'd' | 'f';
	public TerminalRule getARTIFACTRule() {
		return tARTIFACT;
	}
	
	//terminal VERSION:
	//	'0'..'9' '.' '0'..'9' '.' '0'..'9';
	public TerminalRule getVERSIONRule() {
		return tVERSION;
	}
	
	//enum Packaging:
	//	POM | JAR | EAR | WAR | RAR | MAVENPLUGIN | EJB;
	public PackagingElements getPackagingAccess() {
		return ePackaging;
	}
	
	public EnumRule getPackagingRule() {
		return getPackagingAccess().getRule();
	}
	
	//enum Scope:
	//	COMPILE | TEST | PACKAGE | INSTALL | DEPLOY;
	public ScopeElements getScopeAccess() {
		return eScope;
	}
	
	public EnumRule getScopeRule() {
		return getScopeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
