/**
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.multimaven.multiMaven.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.dsl.multimaven.multiMaven.Dependencia;
import org.xtext.dsl.multimaven.multiMaven.Directorio;
import org.xtext.dsl.multimaven.multiMaven.DirectorioPadre;
import org.xtext.dsl.multimaven.multiMaven.MultiMavenFactory;
import org.xtext.dsl.multimaven.multiMaven.MultiMavenPackage;
import org.xtext.dsl.multimaven.multiMaven.Packaging;
import org.xtext.dsl.multimaven.multiMaven.Plugin;
import org.xtext.dsl.multimaven.multiMaven.Proyecto;
import org.xtext.dsl.multimaven.multiMaven.Scope;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MultiMavenPackageImpl extends EPackageImpl implements MultiMavenPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass proyectoEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directorioPadreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass directorioEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dependenciaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pluginEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum packagingEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum scopeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.dsl.multimaven.multiMaven.MultiMavenPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MultiMavenPackageImpl()
  {
    super(eNS_URI, MultiMavenFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MultiMavenPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MultiMavenPackage init()
  {
    if (isInited) return (MultiMavenPackage)EPackage.Registry.INSTANCE.getEPackage(MultiMavenPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMultiMavenPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MultiMavenPackageImpl theMultiMavenPackage = registeredMultiMavenPackage instanceof MultiMavenPackageImpl ? (MultiMavenPackageImpl)registeredMultiMavenPackage : new MultiMavenPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMultiMavenPackage.createPackageContents();

    // Initialize created meta-data
    theMultiMavenPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMultiMavenPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MultiMavenPackage.eNS_URI, theMultiMavenPackage);
    return theMultiMavenPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProyecto()
  {
    return proyectoEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProyecto_Version()
  {
    return (EAttribute)proyectoEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProyecto_Padre()
  {
    return (EReference)proyectoEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDirectorioPadre()
  {
    return directorioPadreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorioPadre_Path()
  {
    return (EAttribute)directorioPadreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorioPadre_Group()
  {
    return (EAttribute)directorioPadreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorioPadre_Artifcat()
  {
    return (EAttribute)directorioPadreEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorioPadre_Version()
  {
    return (EAttribute)directorioPadreEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorioPadre_Packaging()
  {
    return (EAttribute)directorioPadreEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectorioPadre_Dependencias()
  {
    return (EReference)directorioPadreEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectorioPadre_Plugins()
  {
    return (EReference)directorioPadreEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectorioPadre_Directorios()
  {
    return (EReference)directorioPadreEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDirectorio()
  {
    return directorioEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorio_Name()
  {
    return (EAttribute)directorioEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorio_Group()
  {
    return (EAttribute)directorioEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorio_Artifcat()
  {
    return (EAttribute)directorioEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorio_Version()
  {
    return (EAttribute)directorioEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDirectorio_Packaging()
  {
    return (EAttribute)directorioEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectorio_Dependencias()
  {
    return (EReference)directorioEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDirectorio_Plugins()
  {
    return (EReference)directorioEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDependencia()
  {
    return dependenciaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDependencia_Group()
  {
    return (EAttribute)dependenciaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDependencia_Artifcat()
  {
    return (EAttribute)dependenciaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDependencia_Version()
  {
    return (EAttribute)dependenciaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDependencia_Scope()
  {
    return (EAttribute)dependenciaEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlugin()
  {
    return pluginEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlugin_Group()
  {
    return (EAttribute)pluginEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlugin_Artifcat()
  {
    return (EAttribute)pluginEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlugin_Version()
  {
    return (EAttribute)pluginEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPackaging()
  {
    return packagingEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getScope()
  {
    return scopeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultiMavenFactory getMultiMavenFactory()
  {
    return (MultiMavenFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    proyectoEClass = createEClass(PROYECTO);
    createEAttribute(proyectoEClass, PROYECTO__VERSION);
    createEReference(proyectoEClass, PROYECTO__PADRE);

    directorioPadreEClass = createEClass(DIRECTORIO_PADRE);
    createEAttribute(directorioPadreEClass, DIRECTORIO_PADRE__PATH);
    createEAttribute(directorioPadreEClass, DIRECTORIO_PADRE__GROUP);
    createEAttribute(directorioPadreEClass, DIRECTORIO_PADRE__ARTIFCAT);
    createEAttribute(directorioPadreEClass, DIRECTORIO_PADRE__VERSION);
    createEAttribute(directorioPadreEClass, DIRECTORIO_PADRE__PACKAGING);
    createEReference(directorioPadreEClass, DIRECTORIO_PADRE__DEPENDENCIAS);
    createEReference(directorioPadreEClass, DIRECTORIO_PADRE__PLUGINS);
    createEReference(directorioPadreEClass, DIRECTORIO_PADRE__DIRECTORIOS);

    directorioEClass = createEClass(DIRECTORIO);
    createEAttribute(directorioEClass, DIRECTORIO__NAME);
    createEAttribute(directorioEClass, DIRECTORIO__GROUP);
    createEAttribute(directorioEClass, DIRECTORIO__ARTIFCAT);
    createEAttribute(directorioEClass, DIRECTORIO__VERSION);
    createEAttribute(directorioEClass, DIRECTORIO__PACKAGING);
    createEReference(directorioEClass, DIRECTORIO__DEPENDENCIAS);
    createEReference(directorioEClass, DIRECTORIO__PLUGINS);

    dependenciaEClass = createEClass(DEPENDENCIA);
    createEAttribute(dependenciaEClass, DEPENDENCIA__GROUP);
    createEAttribute(dependenciaEClass, DEPENDENCIA__ARTIFCAT);
    createEAttribute(dependenciaEClass, DEPENDENCIA__VERSION);
    createEAttribute(dependenciaEClass, DEPENDENCIA__SCOPE);

    pluginEClass = createEClass(PLUGIN);
    createEAttribute(pluginEClass, PLUGIN__GROUP);
    createEAttribute(pluginEClass, PLUGIN__ARTIFCAT);
    createEAttribute(pluginEClass, PLUGIN__VERSION);

    // Create enums
    packagingEEnum = createEEnum(PACKAGING);
    scopeEEnum = createEEnum(SCOPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(proyectoEClass, Proyecto.class, "Proyecto", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProyecto_Version(), ecorePackage.getEString(), "version", null, 0, 1, Proyecto.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProyecto_Padre(), this.getDirectorioPadre(), null, "padre", null, 0, 1, Proyecto.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directorioPadreEClass, DirectorioPadre.class, "DirectorioPadre", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDirectorioPadre_Path(), ecorePackage.getEString(), "path", null, 0, 1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorioPadre_Group(), ecorePackage.getEString(), "group", null, 0, 1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorioPadre_Artifcat(), ecorePackage.getEString(), "artifcat", null, 0, 1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorioPadre_Version(), ecorePackage.getEString(), "version", null, 0, 1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorioPadre_Packaging(), this.getPackaging(), "packaging", null, 0, 1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectorioPadre_Dependencias(), this.getDependencia(), null, "dependencias", null, 0, -1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectorioPadre_Plugins(), this.getPlugin(), null, "plugins", null, 0, -1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectorioPadre_Directorios(), this.getDirectorio(), null, "directorios", null, 0, -1, DirectorioPadre.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(directorioEClass, Directorio.class, "Directorio", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDirectorio_Name(), ecorePackage.getEString(), "name", null, 0, 1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorio_Group(), ecorePackage.getEString(), "group", null, 0, 1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorio_Artifcat(), ecorePackage.getEString(), "artifcat", null, 0, 1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorio_Version(), ecorePackage.getEString(), "version", null, 0, 1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDirectorio_Packaging(), this.getPackaging(), "packaging", null, 0, 1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectorio_Dependencias(), this.getDependencia(), null, "dependencias", null, 0, -1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDirectorio_Plugins(), this.getPlugin(), null, "plugins", null, 0, -1, Directorio.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dependenciaEClass, Dependencia.class, "Dependencia", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDependencia_Group(), ecorePackage.getEString(), "group", null, 0, 1, Dependencia.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDependencia_Artifcat(), ecorePackage.getEString(), "artifcat", null, 0, 1, Dependencia.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDependencia_Version(), ecorePackage.getEString(), "version", null, 0, 1, Dependencia.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDependencia_Scope(), this.getScope(), "scope", null, 0, 1, Dependencia.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pluginEClass, Plugin.class, "Plugin", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlugin_Group(), ecorePackage.getEString(), "group", null, 0, 1, Plugin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlugin_Artifcat(), ecorePackage.getEString(), "artifcat", null, 0, 1, Plugin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlugin_Version(), ecorePackage.getEString(), "version", null, 0, 1, Plugin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(packagingEEnum, Packaging.class, "Packaging");
    addEEnumLiteral(packagingEEnum, Packaging.POM);
    addEEnumLiteral(packagingEEnum, Packaging.JAR);
    addEEnumLiteral(packagingEEnum, Packaging.EAR);
    addEEnumLiteral(packagingEEnum, Packaging.WAR);
    addEEnumLiteral(packagingEEnum, Packaging.RAR);
    addEEnumLiteral(packagingEEnum, Packaging.MAVENPLUGIN);
    addEEnumLiteral(packagingEEnum, Packaging.EJB);

    initEEnum(scopeEEnum, Scope.class, "Scope");
    addEEnumLiteral(scopeEEnum, Scope.COMPILE);
    addEEnumLiteral(scopeEEnum, Scope.TEST);
    addEEnumLiteral(scopeEEnum, Scope.PACKAGE);
    addEEnumLiteral(scopeEEnum, Scope.INSTALL);
    addEEnumLiteral(scopeEEnum, Scope.DEPLOY);

    // Create resource
    createResource(eNS_URI);
  }

} //MultiMavenPackageImpl
