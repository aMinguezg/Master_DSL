/*
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.multimaven.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.dsl.multimaven.ide.contentassist.antlr.internal.InternalMultiMavenParser;
import org.xtext.dsl.multimaven.services.MultiMavenGrammarAccess;

public class MultiMavenParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MultiMavenGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MultiMavenGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPackagingAccess().getAlternatives(), "rule__Packaging__Alternatives");
			builder.put(grammarAccess.getScopeAccess().getAlternatives(), "rule__Scope__Alternatives");
			builder.put(grammarAccess.getProyectoAccess().getGroup(), "rule__Proyecto__Group__0");
			builder.put(grammarAccess.getDirectorioPadreAccess().getGroup(), "rule__DirectorioPadre__Group__0");
			builder.put(grammarAccess.getDirectorioPadreAccess().getGroup_10(), "rule__DirectorioPadre__Group_10__0");
			builder.put(grammarAccess.getDirectorioPadreAccess().getGroup_11(), "rule__DirectorioPadre__Group_11__0");
			builder.put(grammarAccess.getDirectorioPadreAccess().getGroup_12(), "rule__DirectorioPadre__Group_12__0");
			builder.put(grammarAccess.getDirectorioAccess().getGroup(), "rule__Directorio__Group__0");
			builder.put(grammarAccess.getDirectorioAccess().getGroup_8(), "rule__Directorio__Group_8__0");
			builder.put(grammarAccess.getDirectorioAccess().getGroup_9(), "rule__Directorio__Group_9__0");
			builder.put(grammarAccess.getDirectorioAccess().getGroup_10(), "rule__Directorio__Group_10__0");
			builder.put(grammarAccess.getDependenciaAccess().getGroup(), "rule__Dependencia__Group__0");
			builder.put(grammarAccess.getDependenciaAccess().getGroup_7(), "rule__Dependencia__Group_7__0");
			builder.put(grammarAccess.getPluginAccess().getGroup(), "rule__Plugin__Group__0");
			builder.put(grammarAccess.getIdDirectorioAccess().getGroup(), "rule__IdDirectorio__Group__0");
			builder.put(grammarAccess.getProyectoAccess().getVersionAssignment_2(), "rule__Proyecto__VersionAssignment_2");
			builder.put(grammarAccess.getProyectoAccess().getPadreAssignment_3(), "rule__Proyecto__PadreAssignment_3");
			builder.put(grammarAccess.getDirectorioPadreAccess().getPathAssignment_3(), "rule__DirectorioPadre__PathAssignment_3");
			builder.put(grammarAccess.getDirectorioPadreAccess().getGroupAssignment_5(), "rule__DirectorioPadre__GroupAssignment_5");
			builder.put(grammarAccess.getDirectorioPadreAccess().getArtifcatAssignment_7(), "rule__DirectorioPadre__ArtifcatAssignment_7");
			builder.put(grammarAccess.getDirectorioPadreAccess().getVersionAssignment_9(), "rule__DirectorioPadre__VersionAssignment_9");
			builder.put(grammarAccess.getDirectorioPadreAccess().getPackagingAssignment_10_1(), "rule__DirectorioPadre__PackagingAssignment_10_1");
			builder.put(grammarAccess.getDirectorioPadreAccess().getDependenciasAssignment_11_2(), "rule__DirectorioPadre__DependenciasAssignment_11_2");
			builder.put(grammarAccess.getDirectorioPadreAccess().getPluginsAssignment_12_2(), "rule__DirectorioPadre__PluginsAssignment_12_2");
			builder.put(grammarAccess.getDirectorioPadreAccess().getDirectoriosAssignment_15(), "rule__DirectorioPadre__DirectoriosAssignment_15");
			builder.put(grammarAccess.getDirectorioAccess().getNameAssignment_0(), "rule__Directorio__NameAssignment_0");
			builder.put(grammarAccess.getDirectorioAccess().getGroupAssignment_3(), "rule__Directorio__GroupAssignment_3");
			builder.put(grammarAccess.getDirectorioAccess().getArtifcatAssignment_5(), "rule__Directorio__ArtifcatAssignment_5");
			builder.put(grammarAccess.getDirectorioAccess().getVersionAssignment_7(), "rule__Directorio__VersionAssignment_7");
			builder.put(grammarAccess.getDirectorioAccess().getPackagingAssignment_8_1(), "rule__Directorio__PackagingAssignment_8_1");
			builder.put(grammarAccess.getDirectorioAccess().getDependenciasAssignment_9_2(), "rule__Directorio__DependenciasAssignment_9_2");
			builder.put(grammarAccess.getDirectorioAccess().getPluginsAssignment_10_2(), "rule__Directorio__PluginsAssignment_10_2");
			builder.put(grammarAccess.getDependenciaAccess().getGroupAssignment_2(), "rule__Dependencia__GroupAssignment_2");
			builder.put(grammarAccess.getDependenciaAccess().getArtifcatAssignment_4(), "rule__Dependencia__ArtifcatAssignment_4");
			builder.put(grammarAccess.getDependenciaAccess().getVersionAssignment_6(), "rule__Dependencia__VersionAssignment_6");
			builder.put(grammarAccess.getDependenciaAccess().getScopeAssignment_7_1(), "rule__Dependencia__ScopeAssignment_7_1");
			builder.put(grammarAccess.getPluginAccess().getGroupAssignment_2(), "rule__Plugin__GroupAssignment_2");
			builder.put(grammarAccess.getPluginAccess().getArtifcatAssignment_4(), "rule__Plugin__ArtifcatAssignment_4");
			builder.put(grammarAccess.getPluginAccess().getVersionAssignment_6(), "rule__Plugin__VersionAssignment_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MultiMavenGrammarAccess grammarAccess;

	@Override
	protected InternalMultiMavenParser createParser() {
		InternalMultiMavenParser result = new InternalMultiMavenParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MultiMavenGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MultiMavenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
