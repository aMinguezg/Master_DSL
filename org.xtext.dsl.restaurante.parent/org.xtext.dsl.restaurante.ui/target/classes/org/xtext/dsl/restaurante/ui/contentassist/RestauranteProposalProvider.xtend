/*
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.restaurante.ui.contentassist

import org.xtext.dsl.restaurante.restaurante.Ingrediente
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.xtext.dsl.restaurante.restaurante.Restaurante
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.RuleCall

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class RestauranteProposalProvider extends AbstractRestauranteProposalProvider {
	
	override void complete_Ingrediente(EObject o, RuleCall ruleCall, 
		ContentAssistContext context, ICompletionProposalAcceptor acceptor){
			var propuesta = createCompletionProposal("Ingrediente: CODIGO 'NOMBRE' infoUrl: http://www.ejemplo.com", context)
			acceptor.accept(propuesta)
		}
		
	def void completeIngrediente_Name(Ingrediente i, Assignment assignment,
		ContentAssistContext context, ICompletionProposalAcceptor acceptor){
			super.completeIngrediente_Name(i, assignment, context, acceptor)
			var r = i.eContainer as Restaurante
			var id = "CODI" + (r.ingredientes.filter(typeof(Ingrediente)).size)
			var propuesta = createCompletionProposal(id,context)
			acceptor.accept(propuesta)
		}
}
