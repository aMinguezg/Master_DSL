/**
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.restaurante.ui.contentassist;

import com.google.common.collect.Iterables;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.dsl.restaurante.restaurante.Ingrediente;
import org.xtext.dsl.restaurante.restaurante.Restaurante;
import org.xtext.dsl.restaurante.ui.contentassist.AbstractRestauranteProposalProvider;

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class RestauranteProposalProvider extends AbstractRestauranteProposalProvider {
  @Override
  public void complete_Ingrediente(final EObject o, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    ICompletionProposal propuesta = this.createCompletionProposal("Ingrediente: CODIGO \'NOMBRE\' infoUrl: http://www.ejemplo.com", context);
    acceptor.accept(propuesta);
  }
  
  public void completeIngrediente_Name(final Ingrediente i, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    super.completeIngrediente_Name(i, assignment, context, acceptor);
    EObject _eContainer = i.eContainer();
    Restaurante r = ((Restaurante) _eContainer);
    int _size = IterableExtensions.size(Iterables.<Ingrediente>filter(r.getIngredientes(), Ingrediente.class));
    String id = ("CODI" + Integer.valueOf(_size));
    ICompletionProposal propuesta = this.createCompletionProposal(id, context);
    acceptor.accept(propuesta);
  }
}
