/*
 * generated by Xtext 2.19.0
 */
package org.xtext.dsl.restaurante.serializer;

import com.google.inject.Inject;
import java.util.Set;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Parameter;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.serializer.ISerializationContext;
import org.eclipse.xtext.serializer.sequencer.AbstractDelegatingSemanticSequencer;
import org.xtext.dsl.restaurante.restaurante.Ingrediente;
import org.xtext.dsl.restaurante.restaurante.Restaurante;
import org.xtext.dsl.restaurante.restaurante.RestaurantePackage;
import org.xtext.dsl.restaurante.services.RestauranteGrammarAccess;

@SuppressWarnings("all")
public class RestauranteSemanticSequencer extends AbstractDelegatingSemanticSequencer {

	@Inject
	private RestauranteGrammarAccess grammarAccess;
	
	@Override
	public void sequence(ISerializationContext context, EObject semanticObject) {
		EPackage epackage = semanticObject.eClass().getEPackage();
		ParserRule rule = context.getParserRule();
		Action action = context.getAssignedAction();
		Set<Parameter> parameters = context.getEnabledBooleanParameters();
		if (epackage == RestaurantePackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case RestaurantePackage.INGREDIENTE:
				sequence_Ingrediente(context, (Ingrediente) semanticObject); 
				return; 
			case RestaurantePackage.RESTAURANTE:
				sequence_Restaurante(context, (Restaurante) semanticObject); 
				return; 
			}
		if (errorAcceptor != null)
			errorAcceptor.accept(diagnosticProvider.createInvalidContextOrTypeDiagnostic(semanticObject, context));
	}
	
	/**
	 * Contexts:
	 *     Ingrediente returns Ingrediente
	 *
	 * Constraint:
	 *     (name=ID nombre=STRING infoURL=URL? foto=STRING? alergenico?='alergenico'?)
	 */
	protected void sequence_Ingrediente(ISerializationContext context, Ingrediente semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Restaurante returns Restaurante
	 *
	 * Constraint:
	 *     (nombre=STRING fecha=FECHA ingredientes+=Ingrediente*)
	 */
	protected void sequence_Restaurante(ISerializationContext context, Restaurante semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
}
